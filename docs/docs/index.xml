<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docs on Knackpy</title>
    <link>https://cityofaustin.github.io/knackpy/docs/</link>
    <description>Recent content in Docs on Knackpy</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://cityofaustin.github.io/knackpy/docs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>https://cityofaustin.github.io/knackpy/docs/developer-guide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cityofaustin.github.io/knackpy/docs/developer-guide/</guid>
      <description>Developer Guide #  Issues and pull requests are welcome. Know that your contributions are donated to the public domain.
Environment Setup #  Python release candidates are tested against Python 3.6+, so your safest bet when developing is to use v3.6. However, we encourage you to develop in the most current stable release of Python 3 so that you can help us identify potential future compatibility issues.
Install the development environment requirements from requirements/dev.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://cityofaustin.github.io/knackpy/docs/user-guide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cityofaustin.github.io/knackpy/docs/user-guide/</guid>
      <description>Knackpy #  Knackpy is a Python client for interacting with Knack applications.
Here&amp;rsquo;s the complete documentation.
Installation #  $ pip install knackpy Quick Start #  &amp;gt;&amp;gt;&amp;gt; import knackpy  # basic app construction &amp;gt;&amp;gt;&amp;gt; app = knackpy.App(app_id=&amp;#34;myappid&amp;#34;, api_key=&amp;#34;myverysecretapikey&amp;#34;)  # fetch all records from &amp;#39;object_1&amp;#39; &amp;gt;&amp;gt;&amp;gt; records = app.get(&amp;#34;object_1&amp;#34;)  # get the formatted keys/values of each record &amp;gt;&amp;gt;&amp;gt; records_formatted = [record.format() for record in records]  # access a record property by name &amp;gt;&amp;gt;&amp;gt; customer_address = records[0][&amp;#34;Customer Address&amp;#34;]  # create a record &amp;gt;&amp;gt;&amp;gt; data = {&amp;#34;field_1&amp;#34;: &amp;#34;pizza&amp;#34;} &amp;gt;&amp;gt;&amp;gt; record = app.</description>
    </item>
    
  </channel>
</rss>
